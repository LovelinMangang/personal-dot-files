#!/bin/bash
#Number of snapshots allowed
sn=5

red='\033[0;31m'
nc='\033[0m'
yellow='\033[1;33m'

#Root subvolume device
rsvdv="$(df -Th | grep btrfs | grep /$ | cut -d' ' -f 1)"

#Current date
cdt=`date | sed 's/ /-/g'`

#Root subvolume
rsv="$(sudo btrfs subvolume list / | grep "level 5" | head -n1 | awk '{print $9}')"

#Snapshot subvolume
ssv="$(sudo btrfs subvolume list / | grep "level 5" | grep snapshot | awk '{print $9}')"

#Number of root snapshots
rsl="$(sudo btrfs subvolume list / | grep snapshots | grep root | wc -l)"

#Oldest root snapshot
ors="$(sudo btrfs subvolume list / | grep snapshots | grep root | awk '{print $NF}' | head -n1)"

#mount Root subvolume device to /mnt
if [ -e "$rsvdv" ]; then
    sudo mount $rsvdv /mnt
    printf "${yellow} mounted $rsvdv to /mnt${nc}\n"
else
    printf "${red} no btrfs drives found${nc}\n" && exit
fi

#MUST be in this directory to perform task
cd /mnt

# Check that root subvolume is found...
if [ -e "$rsv" ]; then
    printf "${yellow} root subvolume found${nc}\n"
else
    printf "${red} no root subvolume found... exiting${nc}\n" && exit 1
fi

# Check that snapshot subvolume is found...
if [ -e "$ssv" ]; then
    printf "${yellow} snapshot subvolume found${nc}\n"
else
    printf "${red} no snapshot subvolume found... exiting${nc}\n" && exit 1
fi

# Create snapshot of root subvolume and place in snapshot subvolume with date attached...
sudo btrfs subvolume snapshot $rsv $ssv/root-$cdt

#remove a snapshot if there are more than 5
if [ "$rsl" -ge "$sn"  ]; then
	printf "${red} removing oldest snapshot... ${nc}\n"
	sudo btrfs subvolume delete $ors
else
	printf "${yellow} too few snapshots... ${nc}\n"
	printf "${yellow} not deleting anything ${nc}\n"
fi



cd $HOME
sudo umount /mnt

exit
